// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Peer extends Table {
  public static Peer getRootAsPeer(ByteBuffer _bb) { return getRootAsPeer(_bb, new Peer()); }
  public static Peer getRootAsPeer(ByteBuffer _bb, Peer obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Peer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String publicKey() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer publicKeyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String ip() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ipAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public double trust() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public boolean active() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean joinNetwork() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean joinValidation() { int o = __offset(14); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createPeer(FlatBufferBuilder builder,
      int publicKeyOffset,
      int ipOffset,
      double trust,
      boolean active,
      boolean join_network,
      boolean join_validation) {
    builder.startObject(6);
    Peer.addTrust(builder, trust);
    Peer.addIp(builder, ipOffset);
    Peer.addPublicKey(builder, publicKeyOffset);
    Peer.addJoinValidation(builder, join_validation);
    Peer.addJoinNetwork(builder, join_network);
    Peer.addActive(builder, active);
    return Peer.endPeer(builder);
  }

  public static void startPeer(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addPublicKey(FlatBufferBuilder builder, int publicKeyOffset) { builder.addOffset(0, publicKeyOffset, 0); }
  public static void addIp(FlatBufferBuilder builder, int ipOffset) { builder.addOffset(1, ipOffset, 0); }
  public static void addTrust(FlatBufferBuilder builder, double trust) { builder.addDouble(2, trust, 0.0); }
  public static void addActive(FlatBufferBuilder builder, boolean active) { builder.addBoolean(3, active, false); }
  public static void addJoinNetwork(FlatBufferBuilder builder, boolean joinNetwork) { builder.addBoolean(4, joinNetwork, false); }
  public static void addJoinValidation(FlatBufferBuilder builder, boolean joinValidation) { builder.addBoolean(5, joinValidation, false); }
  public static int endPeer(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // publicKey
    return o;
  }
}

