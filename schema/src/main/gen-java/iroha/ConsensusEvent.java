// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ConsensusEvent extends Table {
  public static ConsensusEvent getRootAsConsensusEvent(ByteBuffer _bb) { return getRootAsConsensusEvent(_bb, new ConsensusEvent()); }
  public static ConsensusEvent getRootAsConsensusEvent(ByteBuffer _bb, ConsensusEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ConsensusEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public iroha.Signature peerSignatures(int j) { return peerSignatures(new iroha.Signature(), j); }
  public iroha.Signature peerSignatures(iroha.Signature obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int peerSignaturesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public iroha.Transaction transactions(int j) { return transactions(new iroha.Transaction(), j); }
  public iroha.Transaction transactions(iroha.Transaction obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int transactionsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public int code() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createConsensusEvent(FlatBufferBuilder builder,
      int peerSignaturesOffset,
      int transactionsOffset,
      int code) {
    builder.startObject(3);
    ConsensusEvent.addTransactions(builder, transactionsOffset);
    ConsensusEvent.addPeerSignatures(builder, peerSignaturesOffset);
    ConsensusEvent.addCode(builder, code);
    return ConsensusEvent.endConsensusEvent(builder);
  }

  public static void startConsensusEvent(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addPeerSignatures(FlatBufferBuilder builder, int peerSignaturesOffset) { builder.addOffset(0, peerSignaturesOffset, 0); }
  public static int createPeerSignaturesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startPeerSignaturesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTransactions(FlatBufferBuilder builder, int transactionsOffset) { builder.addOffset(1, transactionsOffset, 0); }
  public static int createTransactionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTransactionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addByte(2, (byte)code, (byte)0); }
  public static int endConsensusEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

