// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AccountAddSignatory extends Table {
  public static AccountAddSignatory getRootAsAccountAddSignatory(ByteBuffer _bb) { return getRootAsAccountAddSignatory(_bb, new AccountAddSignatory()); }
  public static AccountAddSignatory getRootAsAccountAddSignatory(ByteBuffer _bb, AccountAddSignatory obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public AccountAddSignatory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String account() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer accountAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String signatory(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int signatoryLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createAccountAddSignatory(FlatBufferBuilder builder,
      int accountOffset,
      int signatoryOffset) {
    builder.startObject(2);
    AccountAddSignatory.addSignatory(builder, signatoryOffset);
    AccountAddSignatory.addAccount(builder, accountOffset);
    return AccountAddSignatory.endAccountAddSignatory(builder);
  }

  public static void startAccountAddSignatory(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addAccount(FlatBufferBuilder builder, int accountOffset) { builder.addOffset(0, accountOffset, 0); }
  public static void addSignatory(FlatBufferBuilder builder, int signatoryOffset) { builder.addOffset(1, signatoryOffset, 0); }
  public static int createSignatoryVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSignatoryVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAccountAddSignatory(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // account
    builder.required(o, 6);  // signatory
    return o;
  }
}

