// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PeerSetActive extends Table {
  public static PeerSetActive getRootAsPeerSetActive(ByteBuffer _bb) { return getRootAsPeerSetActive(_bb, new PeerSetActive()); }
  public static PeerSetActive getRootAsPeerSetActive(ByteBuffer _bb, PeerSetActive obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public PeerSetActive __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String peerPubKey() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer peerPubKeyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public boolean active() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createPeerSetActive(FlatBufferBuilder builder,
      int peerPubKeyOffset,
      boolean active) {
    builder.startObject(2);
    PeerSetActive.addPeerPubKey(builder, peerPubKeyOffset);
    PeerSetActive.addActive(builder, active);
    return PeerSetActive.endPeerSetActive(builder);
  }

  public static void startPeerSetActive(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addPeerPubKey(FlatBufferBuilder builder, int peerPubKeyOffset) { builder.addOffset(0, peerPubKeyOffset, 0); }
  public static void addActive(FlatBufferBuilder builder, boolean active) { builder.addBoolean(1, active, false); }
  public static int endPeerSetActive(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // peerPubKey
    return o;
  }
}

