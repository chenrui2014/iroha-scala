// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Attachment extends Table {
  public static Attachment getRootAsAttachment(ByteBuffer _bb) { return getRootAsAttachment(_bb, new Attachment()); }
  public static Attachment getRootAsAttachment(ByteBuffer _bb, Attachment obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Attachment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String mime() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mimeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public int data(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int dataLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer dataAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createAttachment(FlatBufferBuilder builder,
      int mimeOffset,
      int dataOffset) {
    builder.startObject(2);
    Attachment.addData(builder, dataOffset);
    Attachment.addMime(builder, mimeOffset);
    return Attachment.endAttachment(builder);
  }

  public static void startAttachment(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addMime(FlatBufferBuilder builder, int mimeOffset) { builder.addOffset(0, mimeOffset, 0); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(1, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endAttachment(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

