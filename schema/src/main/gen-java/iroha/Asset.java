// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Asset extends Table {
  public static Asset getRootAsAsset(ByteBuffer _bb) { return getRootAsAsset(_bb, new Asset()); }
  public static Asset getRootAsAsset(ByteBuffer _bb, Asset obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Asset __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte assetType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table asset(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createAsset(FlatBufferBuilder builder,
      byte asset_type,
      int assetOffset) {
    builder.startObject(2);
    Asset.addAsset(builder, assetOffset);
    Asset.addAssetType(builder, asset_type);
    return Asset.endAsset(builder);
  }

  public static void startAsset(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addAssetType(FlatBufferBuilder builder, byte assetType) { builder.addByte(0, assetType, 0); }
  public static void addAsset(FlatBufferBuilder builder, int assetOffset) { builder.addOffset(1, assetOffset, 0); }
  public static int endAsset(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

