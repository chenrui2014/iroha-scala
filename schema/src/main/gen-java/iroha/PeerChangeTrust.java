// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PeerChangeTrust extends Table {
  public static PeerChangeTrust getRootAsPeerChangeTrust(ByteBuffer _bb) { return getRootAsPeerChangeTrust(_bb, new PeerChangeTrust()); }
  public static PeerChangeTrust getRootAsPeerChangeTrust(ByteBuffer _bb, PeerChangeTrust obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public PeerChangeTrust __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String peerPubKey() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer peerPubKeyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public double delta() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createPeerChangeTrust(FlatBufferBuilder builder,
      int peerPubKeyOffset,
      double delta) {
    builder.startObject(2);
    PeerChangeTrust.addDelta(builder, delta);
    PeerChangeTrust.addPeerPubKey(builder, peerPubKeyOffset);
    return PeerChangeTrust.endPeerChangeTrust(builder);
  }

  public static void startPeerChangeTrust(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addPeerPubKey(FlatBufferBuilder builder, int peerPubKeyOffset) { builder.addOffset(0, peerPubKeyOffset, 0); }
  public static void addDelta(FlatBufferBuilder builder, double delta) { builder.addDouble(1, delta, 0.0); }
  public static int endPeerChangeTrust(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // peerPubKey
    return o;
  }
}

