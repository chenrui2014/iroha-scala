// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AccountSetUseKeys extends Table {
  public static AccountSetUseKeys getRootAsAccountSetUseKeys(ByteBuffer _bb) { return getRootAsAccountSetUseKeys(_bb, new AccountSetUseKeys()); }
  public static AccountSetUseKeys getRootAsAccountSetUseKeys(ByteBuffer _bb, AccountSetUseKeys obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public AccountSetUseKeys __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String accounts(int j) { int o = __offset(4); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int accountsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public int useKeys() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }

  public static int createAccountSetUseKeys(FlatBufferBuilder builder,
      int accountsOffset,
      int useKeys) {
    builder.startObject(2);
    AccountSetUseKeys.addAccounts(builder, accountsOffset);
    AccountSetUseKeys.addUseKeys(builder, useKeys);
    return AccountSetUseKeys.endAccountSetUseKeys(builder);
  }

  public static void startAccountSetUseKeys(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addAccounts(FlatBufferBuilder builder, int accountsOffset) { builder.addOffset(0, accountsOffset, 0); }
  public static int createAccountsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startAccountsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addUseKeys(FlatBufferBuilder builder, int useKeys) { builder.addShort(1, (short)useKeys, (short)0); }
  public static int endAccountSetUseKeys(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // accounts
    return o;
  }
}

