// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Account extends Table {
  public static Account getRootAsAccount(ByteBuffer _bb) { return getRootAsAccount(_bb, new Account()); }
  public static Account getRootAsAccount(ByteBuffer _bb, Account obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Account __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String pubKey() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pubKeyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String alias() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer aliasAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public String signatories(int j) { int o = __offset(8); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int signatoriesLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public int useKeys() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 1; }

  public static int createAccount(FlatBufferBuilder builder,
      int pubKeyOffset,
      int aliasOffset,
      int signatoriesOffset,
      int useKeys) {
    builder.startObject(4);
    Account.addSignatories(builder, signatoriesOffset);
    Account.addAlias(builder, aliasOffset);
    Account.addPubKey(builder, pubKeyOffset);
    Account.addUseKeys(builder, useKeys);
    return Account.endAccount(builder);
  }

  public static void startAccount(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addPubKey(FlatBufferBuilder builder, int pubKeyOffset) { builder.addOffset(0, pubKeyOffset, 0); }
  public static void addAlias(FlatBufferBuilder builder, int aliasOffset) { builder.addOffset(1, aliasOffset, 0); }
  public static void addSignatories(FlatBufferBuilder builder, int signatoriesOffset) { builder.addOffset(2, signatoriesOffset, 0); }
  public static int createSignatoriesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSignatoriesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addUseKeys(FlatBufferBuilder builder, int useKeys) { builder.addShort(3, (short)useKeys, (short)1); }
  public static int endAccount(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // pubKey
    return o;
  }
}

