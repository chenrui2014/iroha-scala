// automatically generated by the FlatBuffers compiler, do not modify

package iroha;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ComplexAssetLogic extends Table {
  public static ComplexAssetLogic getRootAsComplexAssetLogic(ByteBuffer _bb) { return getRootAsComplexAssetLogic(_bb, new ComplexAssetLogic()); }
  public static ComplexAssetLogic getRootAsComplexAssetLogic(ByteBuffer _bb, ComplexAssetLogic obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ComplexAssetLogic __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public iroha.Chaincode add() { return add(new iroha.Chaincode()); }
  public iroha.Chaincode add(iroha.Chaincode obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public iroha.Chaincode remove() { return remove(new iroha.Chaincode()); }
  public iroha.Chaincode remove(iroha.Chaincode obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public iroha.Chaincode transfer() { return transfer(new iroha.Chaincode()); }
  public iroha.Chaincode transfer(iroha.Chaincode obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createComplexAssetLogic(FlatBufferBuilder builder,
      int addOffset,
      int removeOffset,
      int transferOffset) {
    builder.startObject(3);
    ComplexAssetLogic.addTransfer(builder, transferOffset);
    ComplexAssetLogic.addRemove(builder, removeOffset);
    ComplexAssetLogic.addAdd(builder, addOffset);
    return ComplexAssetLogic.endComplexAssetLogic(builder);
  }

  public static void startComplexAssetLogic(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addAdd(FlatBufferBuilder builder, int addOffset) { builder.addOffset(0, addOffset, 0); }
  public static void addRemove(FlatBufferBuilder builder, int removeOffset) { builder.addOffset(1, removeOffset, 0); }
  public static void addTransfer(FlatBufferBuilder builder, int transferOffset) { builder.addOffset(2, transferOffset, 0); }
  public static int endComplexAssetLogic(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

